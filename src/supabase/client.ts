// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://rtrwrjzatvdyclntelca.supabase.co";
const SUPABASE_ANON_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0cndyanphdHZkeWNsbnRlbGNhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg0NjM2NjMsImV4cCI6MjA3NDAzOTY2M30.r2w14sflhDGf9GGuTqeiLG34bQ0JTpVuLD7i1r-Xlx4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Debug logging for production troubleshooting
console.log('üîß Supabase Client Configuration:');
console.log('Environment:', import.meta.env.MODE);
console.log('URL from env:', import.meta.env.VITE_SUPABASE_URL ? '‚úÖ Set' : '‚ùå Missing');
console.log('Key from env:', import.meta.env.SUPABASE_ANON_KEY ? '‚úÖ Set' : '‚ùå Missing');
console.log('Using URL:', SUPABASE_URL);
console.log('Using Key prefix:', SUPABASE_ANON_KEY.substring(0, 20) + '...');

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

const testConnection = async () => {
  try {
    const { data, error } = await supabase
      .from('profiles')
      .select('count(*)')
      .limit(1);
      
    if (error) {
      console.error('‚ùå Supabase connection test failed:', error.message);
    } else {
      console.log('‚úÖ Supabase connection test successful');
    }
  } catch (err) {
    console.error('‚ùå Supabase connection test error:', err);
  }
};

// Run the test
testConnection();